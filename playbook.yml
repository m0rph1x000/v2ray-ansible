---
# External node configuration.
- hosts: external
  become: yes

  vars_files:
    - vars.yml

  tasks:
    - name: Ensure Docker are installed.
      apt:
        name:
          - docker
          - docker.io
          - containerd
        state: present
    
    - name: Ensere Docker are started at boot.
      service:
        name: docker
        state: started
        enabled: yes

    - name: Create v2ray config directory.
      file:
        path: "{{ v2ray_config_path }}"
        state: directory
        mode: 0755
        group: "{{ ansible_distribution.lower() }}"
        owner: "{{ ansible_distribution.lower() }}"

    - name: Copy v2ray config file.
      template:
        src: template/config.json.j2
        dest: "{{ v2ray_config_path }}/config.json"

    - name: Create v2ray Docker container.
      docker_container:
        name: v2ray-test
        interactive: yes
        tty: yes
        image: v2fly/v2fly-core
        ports:
          - "0.0.0.0:{{ port }}:{{ port }}/tcp"
        volumes:
          - "{{ v2ray_config_path }}:/etc/v2ray"

# Internal node configuration.        
- hosts: internal
  become: yes

  vars_files:
    - vars.yml

  handlers:
    - name: restart haproxy
      service: name=haproxy state=restarted

  tasks:
    - name: Install HAproxy.
      apt: name=haproxy state=present

    - name: config HAproxy.
      template:
        src: template/haproxy.cfg.j2
        dest: "/etc/haproxy/haproxy.cfg"
        owner: root
        group: root
        mode: 0644
      notify: restart haproxy

# Make client.json file.
- hosts: localhost
  connection: local

  vars_files:
    - vars.yml

  tasks:
    - name: Create client-side config file (.json).
      template:
        src: template/client.json.j2
        dest: client.json